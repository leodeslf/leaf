---
import "../styles/style.css";
import "../styles/syntax-highlight.css";

const { headings, url } = Astro.props;
const isIndex = url === "";
const title = (isIndex ? "" : `${headings[0].text} | `).concat("Docs & Notes");
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta
      name="description"
      content="ðŸŒ± Learning docs & notes about my Frontend Development journey, Leo de S.L.F."
    />
    <meta name="author" content="Leonardo de S. Leal F." />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Crimson+Pro:ital,wght@0,300;0,400;0,500;1,300;1,400;1,500&family=Fira+Code:wght@300;400;500&family=Inter:wght@700&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/styles/print.css" media="print" />
    <link
      rel="stylesheet"
      href="/styles/small.css"
      media="(max-width: 599px)"
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <title>{title}</title>
  </head>
  <body>
    <header>
      <span>
        ðŸŒ± <a href="/">Docs & Notes</a>
      </span>
      <span class="prefers-dark">
        <input
          type="checkbox"
          id="prefers-dark__input"
          style="display: none;"
        />
        <label
          for="prefers-dark__input"
          title="Click to switch color scheme (light/dark)."
        >
        </label>
      </span>
    </header>
    <main>
      <article>
        <slot />
      </article>
    </main>
    <footer>
      <p>
        Learning <a href="/">docs & notes</a> about my Frontend Development journey,
        <a href="https://www.leodeslf.com/">Leo de S.L.F</a>.
      </p>
    </footer>
    <script>
      /**
       * 1. Prioritize user's configuration if any,
       * 2. Else use the system's configuration.
       * 3. Listen for changes in both cases.
       * 4. Save user's configuration for later sessions.
       */

      const input = document.getElementById("prefers-dark__input");
      const toggleColorScheme = (isDark, isManual = false) => {
        document.documentElement.classList[isDark ? "add" : "remove"](
          "prefers-dark"
        );
        if (isManual) localStorage.setItem("prefers-dark", isDark);
        else input.checked = isDark;
      };
      input.oninput = (e) => toggleColorScheme(e.target.checked, true);
      const storedPrefersDark = () => localStorage.getItem("prefers-dark");
      const initialPrefersDark = storedPrefersDark();
      const systemPrefersDark = matchMedia("(prefers-color-scheme: dark)");
      systemPrefersDark.onchange = (e) => {
        if (storedPrefersDark() === null) toggleColorScheme(e.matches);
      };
      toggleColorScheme(
        initialPrefersDark !== null
          ? initialPrefersDark === "true"
          : systemPrefersDark.matches
      );
    </script>
  </body>
</html>
